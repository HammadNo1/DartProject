import 'dart:io';

void main() {
  List<Map<String, dynamic>> todoList = [];

  while (true) {
    print("\n==== Todo List ====");
    print("1. Add Task");
    print("2. View Tasks");
    print("3. Mark Task as Completed");
    print("4. Remove Task");
    print("5. Save Tasks to File");
    print("6. Load Tasks from File");
    print("7. Exit");
    stdout.write("Enter your choice (1/2/3/4/5/6/7): ");

    var choice = int.tryParse(stdin.readLineSync() ?? '');

    switch (choice) {
      case 1:
        addTask(todoList);
        break;
      case 2:
        viewTasks(todoList);
        break;
      case 3:
        markTaskAsCompleted(todoList);
        break;
      case 4:
        removeTask(todoList);
        break;
      case 5:
        saveTasksToFile(todoList);
        break;
      case 6:
        loadTasksFromFile(todoList);
        break;
      case 7:
        print("Goodbye!");
        return;
      default:
        print("Invalid choice. Please try again.");
    }
  }
}

void addTask(List<Map<String, dynamic>> todoList) {
  stdout.write("Enter the task description: ");
  var description = stdin.readLineSync() ?? '';

  var task = {"description": description, "completed": false};
  todoList.add(task);

  print("Task added successfully!");
}

void viewTasks(List<Map<String, dynamic>> todoList) {
  if (todoList.isEmpty) {
    print("No tasks found.");
    return;
  }

  print("\n==== Tasks ====");
  for (var i = 0; i < todoList.length; i++) {
    var task = todoList[i];
    var status = task["completed"] ? "âœ“" : " ";
    print("${i + 1}. [$status] ${task["description"]}");
  }
}

void markTaskAsCompleted(List<Map<String, dynamic>> todoList) {
  viewTasks(todoList);

  stdout.write("Enter the task number to mark as completed: ");
  var taskNumber = int.tryParse(stdin.readLineSync() ?? '');

  if (taskNumber == null || taskNumber < 1 || taskNumber > todoList.length) {
    print("Invalid task number. Please try again.");
    return;
  }

  todoList[taskNumber - 1]["completed"] = true;
  print("Task marked as completed!");
}

void removeTask(List<Map<String, dynamic>> todoList) {
  viewTasks(todoList);

  stdout.write("Enter the task number to remove: ");
  var taskNumber = int.tryParse(stdin.readLineSync() ?? '');

  if (taskNumber == null || taskNumber < 1 || taskNumber > todoList.length) {
    print("Invalid task number. Please try again.");
    return;
  }

  var removedTask = todoList.removeAt(taskNumber - 1);
  print("Task '${removedTask["description"]}' removed successfully!");
}

void saveTasksToFile(List<Map<String, dynamic>> todoList) {
  if (todoList.isEmpty) {
    print("No tasks to save.");
    return;
  }

  stdout.write("Enter the file name to save tasks: ");
  var fileName = stdin.readLineSync() ?? '';

  var file = File(fileName);

  try {
    file.writeAsStringSync(todoList.toString());
    print("Tasks saved to '$fileName' successfully!");
  } catch (e) {
    print("Failed to save tasks to file: $e");
  }
}

void loadTasksFromFile(List<Map<String, dynamic>> todoList) {
  stdout.write("Enter the file name to load tasks: ");
  var fileName = stdin.readLineSync() ?? '';

  var file = File(fileName);

  if (!file.existsSync()) {
    print("File not found. Please check the file name and try again.");
    return;
  }

  try {
    var contents = file.readAsStringSync();
    todoList.clear();
    todoList.addAll(parseTasks(contents));
    print("Tasks loaded from '$fileName' successfully!");
  } catch (e) {
    print("Failed to load tasks from file: $e");
  }
}

List<Map<String, dynamic>> parseTasks(String contents) {
  // Simple parser to convert string representation of tasks back to list of maps
  List<Map<String, dynamic>> tasks = [];
  var regex = RegExp(r'{\"description\": \"(.+?)\", \"completed\": (true|false)}');
  var matches = regex.allMatches(contents);

  for (var match in matches) {
    var description = match.group(1);
    var completed = match.group(2) == 'true';
    tasks.add({"description": description, "completed": completed});
  }

  return tasks;
}
